- name: Install a native GitLab instance
  hosts: gitlab
  become: yes
  become_method: sudo
  vars_files:
    - encrypted_variables.yml

  tasks:
  - name: Install all needed packages
    pacman:
      name: 
        - postgresql
        - python-psycopg2
        - redis
        - nginx-mainline
        - gitlab
      state: latest

  - name: Initialize postgresql database cluster 
    command: initdb -D /var/lib/postgres/data -E UTF8
    become_method: sudo
    become_user: postgres
    args:
      creates: /var/lib/postgres/data/PG_VERSION

  - name: Start and enable postgresql database service
    service:
      name: postgresql
      enabled: yes
      state: started

  - name: Create gitlab database user
    postgresql_user:
      name: admin
      password: "{{ dbadminpasswd }}"
      role_attr_flags: SUPERUSER

  - name: Create gitlab database
    postgresql_db:
      name: gitlabhq_production
      owner: admin

  - name: Upload skeleton /etc/webapps/gitlab/database.yml configuration file
    copy:
      src: config_files/database.yml
      dest: /etc/webapps/gitlab/database.yml

  - name: Put database password into database.yml
    lineinfile:
      path: /etc/webapps/gitlab/database.yml
      regexp: "^  password: "
      line: "  password: {{ dbadminpasswd }}"

  - name: Upload redis configuration file
    copy:
      src: config_files/redis.conf
      dest: /etc/redis.conf

  - name: Start and enable redis cache database service
    service:
      name: redis
      enabled: yes
      state: started

  - name: Put gitlab user to redis group
    user: 
      name: gitlab
      groups: redis

  - name: Set /etc/webapps/gitlab/resque.yml configuration file
    copy:
      src: config_files/resque.yml
      dest: /etc/webapps/gitlab/resque.yml

  - name: Create file used for auth token generation - /etc/webapps/gitlab/secret
    lineinfile:
      path: /etc/webapps/gitlab/secret
      line: "{{ gitlab_secret }}"
      create: yes
      owner: root
      group: gitlab
      mode: 0640

  - name: Create file used for auth token generation - /etc/webapps/gitlab-shell/secret
    lineinfile:
      path: /etc/webapps/gitlab-shell/secret
      line: "{{ gitlab_shell_secret }}"
      create: yes
      owner: root
      group: gitlab
      mode: 0640

  - name: Fill in secret strings to /etc/webapps/gitlab/secrets.yml
    blockinfile:
      path: /etc/webapps/gitlab/secrets.yml
      create: yes
      owner: root
      group: gitlab
      mode: 0640
      block: |
        production:
          secret_key_base: {{ secret_key_base }}
          db_key_base: {{ db_key_base }}
          otp_key_base: {{ otp_key_base }}
          openid_connect_signing_key: {{ openid_connect_signing_key }}

  - name: Upload the main configuration file - /etc/webapps/gitlab/gitlab.yml
    copy:
      src: config_files/gitlab.yml
      dest: /etc/webapps/gitlab/gitlab.yml

  - name: Start the gitlab-gitaly service
    service:
      name: gitlab-gitaly
      enabled: yes
      state: started
 
  - name: Set correct permissions for /usr/share/webapps/gitlab/tmp
    file:
      path: /usr/share/webapps/gitlab/tmp
      state: directory
      owner: gitlab
      group: gitlab
      mode: 0755  

  - name: Initialize the GitLab database (this task fails if it has been run already)
    become_method: sudo
    become_user: gitlab
    shell: env $(cat environment | xargs) bundle exec rake gitlab:setup force=yes
    args:
      chdir: /usr/share/webapps/gitlab

  - name: Upload nginx webserver configuration files and certificates
    copy: src={{ item.src }} dest={{ item.dest }}
    with_items:
      - { src: 'config_files/nginx.conf', dest: '/etc/nginx/nginx.conf' }
      - { src: 'config_files/nginx_gitlab.conf', dest: '/etc/nginx/nginx_gitlab.conf' }
      - { src: '../secrets/gitlab.key', dest: '/etc/nginx/gitlab.key' }
      - { src: '../secrets/gitlab.crt', dest: '/etc/nginx/gitlab.crt' }

  - name: Start nginx proxy webserver
    service:
      name: nginx
      enabled: yes
      state: started

  - name: Start GitLab
    service:
      name: gitlab.target
      enabled: yes
      state: started

# TODO: Setup pacman hook for database migration on updates
