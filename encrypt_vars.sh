#!/bin/bash
# Helper script to generate encrypted variables to GitLab installation playbook

# Target directories
SEC_DIR=secrets
ENC_FILE=provision/encrypted_variables.yml

# Encryption keys needed by GitLab
KEYS=(
	gitlab_secret
	gitlab_shell_secret
	secret_key_base
	db_key_base
	otp_key_base
	openid_connect_signing_key
)

# Passwords needed
PASSWDS=(
	becomepasswd
	dbadminpasswd
	gitlabrootpasswd
	vaultpasswd
)	

# Check that none the files exist, as we don't want to overwrite any

for file in ${KEYS[@]}; do
  if [[ -f $SEC_DIR/$file ]]; then 
    echo "Some files exist already, aborting..."; exit
  fi
done

for file in ${PASSWDS[@]}; do
  if [[ -f $SEC_DIR/$file ]]; then
    echo "Some files exist already, aborting"...; exit
  fi
done

# Clear the file for the variables
echo "# Autogenerated encrypted secrets" > $ENC_FILE

# Generate passwords and encrypt them to ansible vault variables
for file in ${PASSWDS[@]}; do
  </dev/urandom tr -dc A-Za-z0-9 | head -c32 > $SEC_DIR/$file
  ansible-vault encrypt_string $(<$SEC_DIR/$file) --name $file >> $ENC_FILE
done

# Generate random strings for GitLab encryption keys and store them as ansible vault variables
for file in ${KEYS[@]}; do
  hexdump -v -n 64 -e '1/1 "%02x"' /dev/urandom > secrets/$file
  ansible-vault encrypt_string $(<$SEC_DIR/$file) --name $file >> $ENC_FILE
done

